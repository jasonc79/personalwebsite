{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61416\\\\Desktop\\\\personalwebsite\\\\src\\\\components\\\\pages\\\\ContactForm.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { React, useState } from 'react';\nimport './ContactForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [contactData, setContactData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  // Error checking for contact form\n  const [error, setError] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    const name = e.target.name;\n    const newValue = e.target.value;\n    setContactData(prevalue => {\n      return {\n        ...prevalue,\n        [name]: newValue\n      };\n    });\n    setError({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n  };\n  const submitContactData = e => {\n    e.preventDefault();\n    let valid = true;\n    const validateEmail = email => {\n      const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return re.test(String(email).toLowerCase());\n    };\n    const userData = {\n      name: contactData.name,\n      email: contactData.email,\n      message: contactData.message\n    };\n    if (!contactData.name) {\n      setError(prevData => ({\n        ...prevData,\n        name: \"Name is required\"\n      }));\n      valid = false;\n    }\n    if (!contactData.email) {\n      setError(prevData => ({\n        ...prevData,\n        email: \"Email is required\"\n      }));\n      valid = false;\n    } else if (!validateEmail(contactData.email)) {\n      setError(prevData => ({\n        ...prevData,\n        email: \"Invalid email\"\n      }));\n      valid = false;\n    }\n    if (!contactData.message) {\n      setError(prevData => ({\n        ...prevData,\n        message: \"Message is required\"\n      }));\n      valid = false;\n    }\n    if (valid) {\n      axios.post('http://localhost:5000/send', userData).then(response => console.log(response)).catch(error => console.error(error));\n      setContactData({\n        name: \"\",\n        email: \"\",\n        message: \"\"\n      });\n      alert(\"Submission was successful!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      onSubmit: submitContactData,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), error.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: error.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"small-input\",\n          name: \"name\",\n          placeholder: \"insert name...\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), error.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: error.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"small-input\",\n          name: \"email\",\n          placeholder: \"insert email...\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), error.message && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"large-input\",\n          name: \"message\",\n          placeholder: \"write a message...\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ContactForm, \"qd+ppWUJkYZL6M8PEKwbG7xKQ78=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_s","contactData","setContactData","name","email","message","error","setError","handleChange","e","target","newValue","value","prevalue","submitContactData","preventDefault","valid","validateEmail","re","test","String","toLowerCase","userData","prevData","post","then","response","console","log","catch","alert","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/61416/Desktop/personalwebsite/src/components/pages/ContactForm.js"],"sourcesContent":["import axios from 'axios';\nimport { React, useState } from 'react';\nimport './ContactForm.css';\nconst ContactForm = () => {\n    const [contactData, setContactData] = useState({\n        name: \"\",\n        email: \"\",\n        message: \"\"\n    })\n    // Error checking for contact form\n    const [error, setError] = useState({\n        name: \"\",\n        email: \"\",\n        message: \"\"\n    })\n    const handleChange = (e) => {\n        const name = e.target.name\n        const newValue = e.target.value\n        setContactData((prevalue) => {\n            return {\n                ...prevalue,\n                [name]: newValue\n            }\n        });\n        setError({\n            name: \"\",\n            email: \"\",\n            message: \"\"\n        });\n    };\n    const submitContactData = (e) => {\n        e.preventDefault()\n        let valid = true;\n        const validateEmail = (email) => {\n            const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n            return re.test(String(email).toLowerCase());\n        };\n        const userData = {\n            name: contactData.name,\n            email: contactData.email,\n            message: contactData.message\n        };\n        if (!contactData.name) {\n            setError((prevData) => ({\n                ...prevData,\n                name: \"Name is required\"\n            }))\n            valid = false\n        }\n        if (!contactData.email) {\n            setError((prevData) => ({\n                ...prevData,\n                email: \"Email is required\"\n            }))\n            valid = false\n        } else if (!validateEmail(contactData.email)) {\n            setError((prevData) => ({\n                ...prevData,\n                email: \"Invalid email\"\n            }))\n            valid = false\n        }\n        if (!contactData.message) {\n            setError((prevData) => ({\n                ...prevData,\n                message: \"Message is required\"\n            }))\n            valid = false\n        }\n\n        if (valid) {\n            axios.post('http://localhost:5000/send', userData)\n            .then((response) => console.log(response))\n            .catch((error) => console.error(error))\n            setContactData({\n                name: \"\",\n                email: \"\",\n                message: \"\"\n            });\n            alert(\"Submission was successful!\")\n        }\n    };\n    return (\n        <>\n            <form className=\"contact-form\" onSubmit={submitContactData}>\n            <div className='container'>\n            <h2 className='name'>Name</h2>\n            {error.name && <span style={{color: 'red'}}>{error.name}</span>}\n            <input type='text' className='small-input' name='name' placeholder= \"insert name...\" onChange={handleChange}/>\n            <h2 className='email'>Email</h2>\n            {error.email && <span style={{color: 'red'}}>{error.email}</span>}\n            <input type='email' className='small-input' name='email' placeholder=\"insert email...\" onChange={handleChange}/>\n            <h2 className='message'>Message</h2>\n            {error.message && <span style={{color: 'red'}}>{error.message}</span>}\n            <textarea type='text' className='large-input' name='message' placeholder=\"write a message...\" onChange={handleChange}/>\n            <button className='submit-btn'>Submit</button>\n            </div>\n            </form>\n        </>\n    )\n}\n\nexport default ContactForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}